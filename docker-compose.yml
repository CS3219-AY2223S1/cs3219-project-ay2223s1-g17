version: '3.9'

services:
  frontend:
    depends_on:
      - user-service
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - '3000:3000'
    environment:
      NEXT_PUBLIC_USER_SERVICE_PORT: 8001
      NEXT_PUBLIC_MATCHING_SERVICE_PORT: 8002
      NEXT_PUBLIC_QUESTION_SERVICE_PORT: 8003
      NEXT_PUBLIC_COLLABORATION_SERVICE_PORT: 8004
      NEXT_PUBLIC_HISTORY_SERVICE_PORT: 8005
      NEXT_PUBLIC_COMMUNICATION_SERVICE_PORT: 8006
    networks:
      - cs3219-project-network

  user-service:
    container_name: user-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.user
    volumes:
      - ./backend/user-service:/app/backend/user-service
      - /app/backend/user-service/node_modules
    ports:
      - '8001:8001'
    environment:
      JWT_SECRET: jwt-secret
      DB_LOCAL_URI: mongodb://mongo_db:27017/user
    networks:
      - cs3219-project-network

  matching-service:
    container_name: matching-service
    build:
      context: ./backend
      dockerfile: Dockerfile.matching
    volumes:
      - ./backend/matching-service:/app/backend/matching-service
      - /app/backend/matching-service/node_modules
    ports:
      - '8002:8002'
    networks:
      - cs3219-project-network

  question-service:
    container_name: question-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.question
    volumes:
      - ./backend/question-service:/app/backend/question-service
      - /app/backend/question-service/node_modules
    ports:
      - '8003:8003'
    environment:
      DB_LOCAL_URI: mongodb://mongo_db:27017/question
    networks:
      - cs3219-project-network

  collaboration-service:
    container_name: collaboration-service
    build:
      context: ./backend
      dockerfile: Dockerfile.collaboration
    volumes:
      - ./backend/collaboration-service:/app/backend/collaboration-service
      - /app/backend/collaboration-service/node_modules
    ports:
      - '8004:8004'
    networks:
      - cs3219-project-network

  history-service:
    container_name: history-service
    depends_on:
      - mongo_db
    build:
      context: ./backend
      dockerfile: Dockerfile.history
    volumes:
      - ./backend/history-service:/app/backend/history-service
      - /app/backend/history-service/node_modules
    ports:
      - '8005:8005'
    environment:
      DB_LOCAL_URI: mongodb://mongo_db:27017/history
    networks:
      - cs3219-project-network

  communication-service:
    container_name: communication-service
    build:
      context: ./backend
      dockerfile: Dockerfile.communication
    volumes:
      - ./backend/communication-service:/app/backend/communication-service
      - /app/backend/communication-service/node_modules
    ports:
      - '8006:8006'
    networks:
      - cs3219-project-network

  mongo_db:
    container_name: mongo_db
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_db:/data/db
    networks:
      - cs3219-project-network

networks:
  cs3219-project-network:
    driver: bridge

volumes:
  mongo_db: {}
